SERVICE_FOLDERS_MASTER: &SERVICE_FOLDERS
  SERVICE_FOLDERS: "api adapter-worker"

GCP_DOCKER_AUTH_MASTER: &GCP_DOCKER_AUTH
  auth:
    username: _json_key
    password: ${GOOGLE_AUTH}

version: 2.1
orbs:
  azure-acr: circleci/azure-acr@0.1.4
  ms-teams: cloudradar-monitoring/ms-teams@0.0.1
jobs:
  test:
    docker:
      - image: cimg/python:3.9
    environment:
      <<: *SERVICE_FOLDERS
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.7
      - run: poetry self update
      - run: poetry config http-basic.sensynehealth ${GEMFURY_DOWNLOAD_KEY} ''
      - run:
          name: Set up tox tests
          command: pip install --upgrade tox
      - restore_cache:
          keys:
            - v1-poetry-api-deps-{{ checksum "api/poetry.lock" }}
            - v1-poetry-api-deps-
      - restore_cache:
          keys:
            - v1-poetry-aw-deps-{{ checksum "adapter-worker/poetry.lock" }}
            - v1-poetry-aw-deps-
      - run:
          name: Run tox tests
          command: .circleci/run_tox_tests.sh
      - save_cache:
          key: v1-poetry-api-deps-{{ checksum "api/poetry.lock" }}
          paths:
            - api/.tox
      - save_cache:
          key: v1-poetry-aw-deps-{{ checksum "adapter-worker/poetry.lock" }}
          paths:
            - adapter-worker/.tox
      - persist_to_workspace:
          root: .
          paths:
            - api/coverage-reports
            - adapter-worker/coverage-reports
  test-ui:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-yarn-ui-deps-{{ checksum "api/dhos_knifewrench_ui/yarn.lock" }}
            - v1-yarn-ui-deps-
      - run:
          name: Run JS tests
          command: .circleci/run_js_tests.sh
      - save_cache:
          key: v1-yarn-ui-deps-{{ checksum "api/dhos_knifewrench_ui/yarn.lock" }}
          paths:
            - api/dhos_knifewrench_ui/node_modules

  integration-test:
    docker:
      - image: gcr.io/dhos-stack/circleci-build-image:latest
        <<: *GCP_DOCKER_AUTH
    environment:
      <<: *SERVICE_FOLDERS
      REPORT_PORTAL_PROJECT: platform
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.7
      - run:
          name: Auth with ACR
          command: source /usr/local/bin/deployment-helpers-v1.sh; authenticateToACR
      - run:
          name: Run the integration test script
          command: .circleci/run_integration_tests.sh

  deploy-dev:
    docker:
      - image: gcr.io/dhos-stack/circleci-build-image:latest
        <<: *GCP_DOCKER_AUTH
    environment:
      <<: *SERVICE_FOLDERS
      K8S_DEV_DEPLOYMENT_PREFIX: deployment/dhos-knifewrench
      K8S_DEV_DEPLOYMENT_SUFFIX: dep
      ACR_REPO_BASE: dhos
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.7
      - run:
          name: Add build information
          command: .circleci/record_build_info.sh
      - run:
          name: Build image(s)
          command: .circleci/build_images.sh
      - azure-acr/build-and-push-image:
          checkout: false
          login-server-name: ${AZURE_LOGIN_SERVER_NAME}
          registry-name: ${AZURE_REGISTRY_NAME}
          repo: ${ACR_REPO_BASE}/dhos-knifewrench-api
          tag: dev,cb-${CIRCLE_BUILD_NUM},$(git log --pretty=format:'%h' -n 1)
          extra-build-args: --build-arg GEMFURY_DOWNLOAD_KEY
          path: ./api
      - azure-acr/build-and-push-image:
          checkout: false
          login-server-name: ${AZURE_LOGIN_SERVER_NAME}
          registry-name: ${AZURE_REGISTRY_NAME}
          repo: ${ACR_REPO_BASE}/dhos-knifewrench-adapter-worker
          tag: dev,cb-${CIRCLE_BUILD_NUM},$(git log --pretty=format:'%h' -n 1)
          extra-build-args: --build-arg GEMFURY_DOWNLOAD_KEY
          path: ./adapter-worker
      - run:
          name: Deploy to Azure dev environment
          command: .circleci/deploy_azure_dev.sh
      - ms-teams/report:
          only_on_fail: true
          webhook_url: ${MSTEAMS_NOTIFY_WEBHOOK_URL}

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - test:
          context: engineering-build
      - test-ui:
          context: engineering-build
      - integration-test:
          context: engineering-build
      - deploy-dev:
          context: dhos-deploy
          requires:
            - test
            - test-ui
            - integration-test
          filters:
            branches:
              only:
                - develop
