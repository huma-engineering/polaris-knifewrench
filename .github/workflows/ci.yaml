name: CI

on: [workflow_dispatch, push, pull_request]

jobs:
  test:
    name: Unit testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Update pip, poetry and tox
        run: |
          poetry self update --no-ansi
          pip install --upgrade pip tox
      - name: Create coverage report dir
        run: |
          mkdir -p api/coverage-reports
          mkdir -p adapter-worker/coverage-reports
      - name: Cache python dependencies
        uses: actions/cache@v3
        with:
          path: |
            **/api/.tox
            **/adapter-worker/.tox
          key: v1-poetry-deps-${{ hashFiles('**/api/poetry.lock', '**/adapter-worker/poetry.lock', '**/api/tox.ini', '**/adapter-worker/tox.ini') }}
          restore-keys: v1-poetry-deps-
      - name: Run api tox tests
        run: tox -c api -e py39
      - name: Run adapter-worker tox tests
        run: tox -c adapter-worker -e py39
      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: |
            api/coverage-reports/coverage.xml
            adapter-worker/coverage-reports/coverage.xml

  test-ui:
    name: UI testing
    runs-on: ubuntu-latest
    container: node:12
    steps:
      - uses: actions/checkout@v3
      - name: Cache JavaScript dependencies
        uses: actions/cache@v3
        with:
          path: api/dhos_knifewrench_ui/node_modules
          key: v1-yarn-ui-deps-${{ hashFiles('**/api/dhos_knifewrench_ui/yarn.lock') }}
          restore-keys: v1-yarn-ui-deps-
      - name: Run JavaScript tests
        run: ./run_js_tests.sh

  integration_tests:
    name: Integration testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run the integration test script
        run: ./run_integration_tests.sh

  build_and_push:
    name: Build and push
    needs: [test, test-ui, integration_tests]
    if: ${{ github.ref == 'refs/heads/develop' }}
    runs-on: ubuntu-latest
    env:
      ACR_REPO_BASE: huma-engineering/dhos
      REGISTRY: ghcr.io
    steps:
      - uses: actions/checkout@v3
      - name: Log in to the Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker for API
        id: api_meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.ACR_REPO_BASE }}/dhos-knifewrench-api
          tags: |
            type=raw,value=dev
            type=sha
      - name: Build and push Docker image for API
        uses: docker/build-push-action@v3
        with:
          context: ./api
          push: true
          tags: ${{ steps.bff_meta.outputs.tags }}
          labels: ${{ steps.bff_meta.outputs.labels }}
      - name: Extract metadata (tags, labels) for Docker for Adapter
        id: desktop_meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.ACR_REPO_BASE }}/dhos-knifewrench-adapter-worker
          tags: |
            type=raw,value=dev
            type=sha
      - name: Build and push Docker image for Adapter
        uses: docker/build-push-action@v3
        with:
          context: ./adapter-worker
          push: true
          tags: ${{ steps.desktop_meta.outputs.tags }}
          labels: ${{ steps.desktop_meta.outputs.labels }}
